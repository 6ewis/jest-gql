{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 187a8861943a72929036","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/process/browser.js","webpack:///./src/gqlTest.js","webpack:///./src/createApolloClient.js","webpack:///external {\"root\":\"react-apollo\",\"commonjs2\":\"react-apollo\",\"commonjs\":\"react-apollo\",\"amd\":\"react-apollo\",\"umd\":\"react-apollo\"}","webpack:///./node_modules/isomorphic-fetch/fetch-npm-browserify.js","webpack:///./node_modules/whatwg-fetch/fetch.js"],"names":["describe","test","expect","global","runGQLTest","testToRun","data","executeGQLCommand","executionPlan","apolloClient","testInfo","pop","gql","Error","definitions","length","definition","result","operation","params","mutation","vars","variables","mutate","toBe","query","getExecutionPlan","push","previous","prev","executeTest","num","name","undefined","assertions","endPoint","process","env","GQL_API_URL","repeat","Promise","all","Array","fill","map","_","i","browser","fetch","create","networkInterface","uri","middleWares","applyMiddleware","req","next","token","oAuthToken","options","headers","authorization","use","severNetworkInterface","ssrMode"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;ACpBA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;;;;;;;ACvLtC;;;;;;;;AAEA,MAAM,EAAEA,QAAF,EAAYC,IAAZ,EAAkBC,MAAlB,KAA6BC,MAAnC;;AAEA,MAAMC;AAAA,+BAAa,WAAOC,SAAP,EAAqB;AACtCL,aAAS,eAAT,oBAA0B,aAAY;AACpC,UAAIM,OAAO,EAAX;AACA,YAAMC;AAAA,sCAAoB,WAAOC,aAAP,EAAyB;AACjD,gBAAMC,eAAe,kCAAmBH,IAAnB,CAArB;AACA,gBAAMI,WAAWF,cAAcG,GAAd,EAAjB;AACA,cAAI,CAACD,SAASE,GAAd,EAAmB;AACjB,kBAAMC,MAAM,8CAAN,CAAN;AACD;AACD,cAAIH,SAASE,GAAT,CAAaE,WAAb,CAAyBC,MAAzB,KAAoC,CAAxC,EAA2C;AACzC,kBAAMF,MAAM,oDAAN,CAAN;AACD;AACD,gBAAMG,aAAaN,SAASE,GAAT,CAAaE,WAAb,CAAyB,CAAzB,CAAnB;AACA,cAAIG,SAAS,IAAb;AACA,kBAAQD,WAAWE,SAAnB;AACE,iBAAK,UAAL;AAAiB;AACf,sBAAMC,SAAS,EAAEC,UAAUV,SAASE,GAArB,EAAf;AACA,oBAAIF,SAASW,IAAb,EAAmB;AACjBF,yBAAOG,SAAP,GAAmB,MAAMZ,SAASW,IAAT,CAAcf,IAAd,CAAzB;AACD;AACDW,yBAAS,MAAMR,aAAac,MAAb,CAAoBJ,MAApB,CAAf;;AAEA,oBAAIT,SAASO,MAAb,EAAqB;AACnBX,2CAAYA,IAAZ,GAAsB,MAAMI,SAASO,MAAT,CAAgBA,OAAOX,IAAvB,CAA5B;AACD;AACD,oBAAII,SAAST,IAAb,EAAmB;AACjBC,yBAAOQ,SAAST,IAAT,CAAcK,IAAd,CAAP,EAA4BkB,IAA5B,CAAiC,IAAjC;AACD,iBAFD,MAEO;AACL,wBAAMX,MAAM,qCAAN,CAAN;AACD;AACD;AACD;AACD,iBAAK,OAAL;AAAc;AACZ,sBAAMM,SAAS,EAAEM,OAAOf,SAASE,GAAlB,EAAf;AACA,oBAAIF,SAASW,IAAb,EAAmB;AACjBF,yBAAOG,SAAP,GAAmB,MAAMZ,SAASW,IAAT,CAAcf,IAAd,CAAzB;AACD;AACDW,yBAAS,MAAMR,aAAagB,KAAb,CAAmBN,MAAnB,CAAf;;AAEA,oBAAIT,SAASO,MAAb,EAAqB;AACnBX,2CAAYA,IAAZ,GAAsB,MAAMI,SAASO,MAAT,CAAgBA,OAAOX,IAAvB,CAA5B;AACD;AACD,oBAAII,SAAST,IAAb,EAAmB;AACjBC,yBAAOQ,SAAST,IAAT,CAAcK,IAAd,CAAP,EAA4BkB,IAA5B,CAAiC,IAAjC;AACD,iBAFD,MAEO;AACL,wBAAMX,MAAM,qCAAN,CAAN;AACD;AACD;AACD;AACD;AACE,oBAAMA,MAAO,yBAAwBG,WAAWE,SAAU,GAApD,CAAN;AApCJ;;AAuCA,cAAIV,cAAcO,MAAlB,EAA0B,MAAMR,kBAAkBC,aAAlB,CAAN;AAC3B,SAnDK;;AAAA;AAAA;AAAA;AAAA,UAAN;;AAqDA,YAAMkB,mBAAmB,UAAChB,QAAD,EAAWF,aAAX,EAA6B;AACpDA,sBAAcmB,IAAd,CAAmBjB,QAAnB;AACA,YAAIA,SAASkB,QAAb,EAAuB;AACrB,gBAAMC,OAAO,CAAC,GAAGnB,SAASkB,QAAb,CAAb;AACA,iBAAOC,KAAKd,MAAZ,EAAoB;AAClBW,6BAAiBG,KAAKlB,GAAL,EAAjB,EAA6BH,aAA7B;AACD;AACF;AACF,OARD;;AAUA,YAAMsB;AAAA,sCAAc,WAAOpB,QAAP,EAAiBqB,GAAjB,EAAyB;AAC3C,gBAAMvB,gBAAgB,EAAtB;AACAkB,2BAAiBhB,QAAjB,EAA2BF,aAA3B;AACAP,eAAM,GAAES,SAASsB,IAAK,GAAED,QAAQE,SAAR,GAAqB,IAAGF,GAAI,EAA5B,GAAgC,EAAG,EAA3D,oBAA8D,aAAY;AACxE7B,mBAAOgC,UAAP,CAAkB1B,cAAcO,MAAhC;AACA,kBAAMR,kBAAkBC,aAAlB,CAAN;AACD,WAHD;AAID,SAPK;;AAAA;AAAA;AAAA;AAAA,UAAN;AAQAF,WAAK6B,QAAL,GAAgB9B,UAAU8B,QAAV,IAAsBC,QAAQC,GAAR,CAAYC,WAAlD;AACA,UAAIjC,UAAUkC,MAAd,EAAsB;AACpB,cAAMC,QAAQC,GAAR,CACJ,IAAIC,KAAJ,CAAUrC,UAAUkC,MAApB,EAA4BI,IAA5B,CAAiC,CAAjC,EAAoCC,GAApC,CAAwC,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUhB,YAAYzB,SAAZ,EAAuByC,IAAI,CAA3B,CAAV;AAAA,SAAxC,CADI,CAAN;AAGD,OAJD,MAIO;AACL,cAAMhB,YAAYzB,SAAZ,CAAN;AACD;AACD,aAAOC,IAAP;AACD,KAlFD;AAmFD,GApFK;;AAAA;AAAA;AAAA;AAAA,IAAN;kBAqFeF,U;;;;;;;;;;;;;;ACzFf;;AACA;;;;;;AAEA,IAAI,CAACgC,QAAQW,OAAb,EAAsB;AACpB5C,SAAO6C,KAAP;AACD;;AAED,SAASC,MAAT,CAAgB3C,IAAhB,EAAsB;AACpB,QAAM4C,mBAAmB,yCAAuB;AAC9CC,SAAK7C,KAAK6B;AADoC,GAAvB,CAAzB;AAGA,QAAMiB,cAAc,CAClB;AACEC,oBAAgBC,GAAhB,EAAqBC,IAArB,EAA2B;AACzB,YAAMC,QAAQlD,KAAKmD,UAAnB;AACA,UAAID,KAAJ,EAAW;AACT,YAAI,CAACF,IAAII,OAAJ,CAAYC,OAAjB,EAA0B;AACxBL,cAAII,OAAJ,CAAYC,OAAZ,GAAsB,EAAtB;AACD;AACDL,YAAII,OAAJ,CAAYC,OAAZ,CAAoBC,aAApB,GAAoCJ,QAAS,UAASA,KAAM,EAAxB,GAA4B,IAAhE;AACD;AACDD;AACD;AAVH,GADkB,CAApB;AAcAL,mBAAiBW,GAAjB,CAAqBT,WAArB;AACA,QAAMU,wBAAwB,yCAAuB,EAAEX,KAAK7C,KAAK6B,QAAZ,EAAvB,CAA9B;AACA2B,wBAAsBD,GAAtB,CAA0BT,WAA1B;AACA,SAAO,8BAAiB;AACtBW,aAAS,IADa;AAEtBb,sBAAkBY;AAFI,GAAjB,CAAP;AAID;;kBAEcb,M;;;;;;;AClCf,+C;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACLA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wCAAwC,mBAAmB;AAC3D;AACA;;AAEA;AACA;AACA,kCAAkC,oBAAoB;AACtD;AACA;;AAEA;AACA;AACA,wCAAwC,4BAA4B;AACpE;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA,uDAAuD;AACvD,SAAS;AACT;AACA,SAAS;AACT,8EAA8E;AAC9E;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,8BAA8B,uBAAuB;AACrD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA,uCAAuC,0BAA0B;AACjE;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA,+BAA+B,0BAA0B,eAAe;AACxE;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,OAAO;;AAEP;AACA,KAAK;AACL;AACA;AACA,CAAC","file":"@binpar/jest-gql.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react-apollo\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@binpar/jest-gql\", [\"react-apollo\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@binpar/jest-gql\"] = factory(require(\"react-apollo\"));\n\telse\n\t\troot[\"@binpar/jest-gql\"] = factory(root[\"react-apollo\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_4__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 187a8861943a72929036","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 0\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 1\n// module chunks = 0","import createApolloClient from './createApolloClient';\n\nconst { describe, test, expect } = global;\n\nconst runGQLTest = async (testToRun) => {\n  describe('GraphQL Tests', async () => {\n    let data = {};\n    const executeGQLCommand = async (executionPlan) => {\n      const apolloClient = createApolloClient(data);\n      const testInfo = executionPlan.pop();\n      if (!testInfo.gql) {\n        throw Error('No GQL operation provided to the runGQLTest.');\n      }\n      if (testInfo.gql.definitions.length !== 1) {\n        throw Error('Only one GQL operation is allowed in a runGQLTest.');\n      }\n      const definition = testInfo.gql.definitions[0];\n      let result = null;\n      switch (definition.operation) {\n        case 'mutation': {\n          const params = { mutation: testInfo.gql };\n          if (testInfo.vars) {\n            params.variables = await testInfo.vars(data);\n          }\n          result = await apolloClient.mutate(params);\n\n          if (testInfo.result) {\n            data = { ...data, ...(await testInfo.result(result.data)) };\n          }\n          if (testInfo.test) {\n            expect(testInfo.test(data)).toBe(true);\n          } else {\n            throw Error('On test defined for the runGQLTest.');\n          }\n          break;\n        }\n        case 'query': {\n          const params = { query: testInfo.gql };\n          if (testInfo.vars) {\n            params.variables = await testInfo.vars(data);\n          }\n          result = await apolloClient.query(params);\n\n          if (testInfo.result) {\n            data = { ...data, ...(await testInfo.result(result.data)) };\n          }\n          if (testInfo.test) {\n            expect(testInfo.test(data)).toBe(true);\n          } else {\n            throw Error('On test defined for the runGQLTest.');\n          }\n          break;\n        }\n        default:\n          throw Error(`Unknown GQL operation ${definition.operation}.`);\n      }\n\n      if (executionPlan.length) await executeGQLCommand(executionPlan);\n    };\n\n    const getExecutionPlan = (testInfo, executionPlan) => {\n      executionPlan.push(testInfo);\n      if (testInfo.previous) {\n        const prev = [...testInfo.previous];\n        while (prev.length) {\n          getExecutionPlan(prev.pop(), executionPlan);\n        }\n      }\n    };\n\n    const executeTest = async (testInfo, num) => {\n      const executionPlan = [];\n      getExecutionPlan(testInfo, executionPlan);\n      test(`${testInfo.name}${num !== undefined ? ` ${num}` : ''}`, async () => {\n        expect.assertions(executionPlan.length);\n        await executeGQLCommand(executionPlan);\n      });\n    };\n    data.endPoint = testToRun.endPoint || process.env.GQL_API_URL;\n    if (testToRun.repeat) {\n      await Promise.all(\n        new Array(testToRun.repeat).fill(0).map((_, i) => executeTest(testToRun, i + 1)),\n      );\n    } else {\n      await executeTest(testToRun);\n    }\n    return data;\n  });\n};\nexport default runGQLTest;\n\n\n\n// WEBPACK FOOTER //\n// ./src/gqlTest.js","import { ApolloClient, createNetworkInterface } from 'react-apollo';\nimport fetch from 'isomorphic-fetch';\n\nif (!process.browser) {\n  global.fetch = fetch;\n}\n\nfunction create(data) {\n  const networkInterface = createNetworkInterface({\n    uri: data.endPoint,\n  });\n  const middleWares = [\n    {\n      applyMiddleware(req, next) {\n        const token = data.oAuthToken;\n        if (token) {\n          if (!req.options.headers) {\n            req.options.headers = {};\n          }\n          req.options.headers.authorization = token ? `Bearer ${token}` : null;\n        }\n        next();\n      },\n    },\n  ];\n  networkInterface.use(middleWares);\n  const severNetworkInterface = createNetworkInterface({ uri: data.endPoint });\n  severNetworkInterface.use(middleWares);\n  return new ApolloClient({\n    ssrMode: true,\n    networkInterface: severNetworkInterface,\n  });\n}\n\nexport default create;\n\n\n\n// WEBPACK FOOTER //\n// ./src/createApolloClient.js","module.exports = __WEBPACK_EXTERNAL_MODULE_4__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"react-apollo\",\"commonjs2\":\"react-apollo\",\"commonjs\":\"react-apollo\",\"amd\":\"react-apollo\",\"umd\":\"react-apollo\"}\n// module id = 4\n// module chunks = 0","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nmodule.exports = self.fetch.bind(self);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/isomorphic-fetch/fetch-npm-browserify.js\n// module id = 5\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/whatwg-fetch/fetch.js\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}