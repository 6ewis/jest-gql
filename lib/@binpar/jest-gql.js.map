{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 23b589828f82cb929b88","webpack:///./src/gqlTest.js","webpack:///(webpack)/buildin/global.js","webpack:///./src/createApolloClient.js","webpack:///external {\"root\":\"react-apollo\",\"commonjs2\":\"react-apollo\",\"commonjs\":\"react-apollo\",\"amd\":\"react-apollo\",\"umd\":\"react-apollo\"}"],"names":["describe","test","expect","global","runGQLTest","testToRun","data","endPoint","executeGQLCommand","executionPlan","apolloClient","testInfo","pop","gql","definitions","length","Error","definition","result","operation","expectTestToBeTrue","operations","mutation","query","params","vars","variables","toBe","getExecutionPlan","push","previous","prev","executeTest","num","name","undefined","assertions","main","repeat","Promise","all","Array","fill","map","_","i","create","networkInterface","uri","middleWares","applyMiddleware","req","next","token","oAuthToken","options","headers","authorization","use","severNetworkInterface","ApolloClient","ssrMode"],"mappings":"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","file":"@binpar/jest-gql.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"react-apollo\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"@binpar/jest-gql\", [\"react-apollo\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@binpar/jest-gql\"] = factory(require(\"react-apollo\"));\n\telse\n\t\troot[\"@binpar/jest-gql\"] = factory(root[\"react-apollo\"]);\n})(typeof self !== 'undefined' ? self : this, function(__WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 23b589828f82cb929b88","import createApolloClient from './createApolloClient';\n\nconst { describe, test, expect } = global;\n\nconst runGQLTest = async (testToRun) => {\n  let data = { endPoint: testToRun.endPoint };\n\n  describe('GraphQL Tests', () => {\n    const executeGQLCommand = async (executionPlan) => {\n      const apolloClient = createApolloClient(data);\n      const testInfo = executionPlan.pop();\n\n      if (testInfo.gql.definitions.length !== 1) {\n        throw Error('Only one GQL operation is allowed in a runGQLTest.');\n      }\n      const definition = testInfo.gql.definitions[0];\n      let result = null;\n      if (!definition.operation) {\n        throw Error(`Unknown GQL operation ${definition.operation}.`);\n      }\n\n      const expectTestToBeTrue = async (operation) => {\n        const operations = { mutation: 'mutate', query: 'query' };\n        const params = { [`${operation}`]: testInfo.gql };\n\n        if (testInfo.vars) {\n          params.variables = await testInfo.vars(data);\n        }\n\n        result = await apolloClient[operations[operation]](params);\n\n        if (testInfo.result) {\n          data = { ...data, ...(await testInfo.result(result.data)) };\n        }\n\n        expect(testInfo.test(data)).toBe(true);\n      };\n\n      const { operation } = definition;\n      switch (operation) {\n        case 'mutation': {\n          await expectTestToBeTrue(operation);\n          break;\n        }\n        case 'query': {\n          await expectTestToBeTrue(operation);\n          break;\n        }\n        default:\n          throw Error(`Unknown GQL operation ${definition.operation}.`);\n      }\n\n      if (executionPlan.length) await executeGQLCommand(executionPlan);\n    };\n\n    const getExecutionPlan = (testInfo, executionPlan) => {\n      executionPlan.push(testInfo);\n      if (testInfo.previous) {\n        const prev = [...testInfo.previous];\n        while (prev.length) {\n          getExecutionPlan(prev.pop(), executionPlan);\n        }\n      }\n    };\n\n    const executeTest = async (testInfo, num) => {\n      const executionPlan = [];\n      getExecutionPlan(testInfo, executionPlan);\n      test(`${testInfo.name}${num !== undefined ? ` ${num}` : ''}`, async () => {\n        expect.assertions(executionPlan.length);\n        await executeGQLCommand(executionPlan);\n      });\n    };\n\n    const main = async () => {\n      if (testToRun.repeat) {\n        await Promise.all(\n          new Array(testToRun.repeat).fill(0).map((_, i) => executeTest(testToRun, i + 1)),\n        );\n      } else {\n        await executeTest(testToRun);\n      }\n    };\n\n    main();\n  });\n\n  return data;\n};\n\nexport default runGQLTest;\n\n\n\n// WEBPACK FOOTER //\n// ./src/gqlTest.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 1\n// module chunks = 0","import { ApolloClient, createNetworkInterface } from 'react-apollo';\n\nfunction create(data) {\n  const networkInterface = createNetworkInterface({\n    uri: data.endPoint,\n  });\n  const middleWares = [\n    {\n      applyMiddleware(req, next) {\n        const token = data.oAuthToken;\n        if (token) {\n          req.options.headers = {};\n          req.options.headers.authorization = `Bearer ${token}`;\n        }\n        next();\n      },\n    },\n  ];\n  networkInterface.use(middleWares);\n  const severNetworkInterface = createNetworkInterface({ uri: data.endPoint });\n  severNetworkInterface.use(middleWares);\n  return new ApolloClient({\n    ssrMode: true,\n    networkInterface: severNetworkInterface,\n  });\n}\n\nexport default create;\n\n\n\n// WEBPACK FOOTER //\n// ./src/createApolloClient.js","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external {\"root\":\"react-apollo\",\"commonjs2\":\"react-apollo\",\"commonjs\":\"react-apollo\",\"amd\":\"react-apollo\",\"umd\":\"react-apollo\"}\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}